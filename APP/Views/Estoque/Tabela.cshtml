@using System.Text.RegularExpressions;

@model IEnumerable<CodeData_Connection.Models.EquipamentoStatus>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/table.css">
    <link rel="stylesheet" href="~/css/datatables.css">
</head>

<div class="container-table-1">
    <header>
        <h1>Lista de Patrimônio</h1>
        <div class="actions">
            <button class="btn orange" id="pdf">PDF</button>
            <button class="btn orange" id="xls">XLS</button>
            <button class="btn orange" id="printer">Printer</button>
            <button class="btn orange register-btn">Adicionar Equipamento</button>
            <button class="btn dark-blue">Importar Equipamentos</button>
        </div>
    </header>

    <div class="container-table">
        <div class="search-sort">
            <input type="text" placeholder="Search" id="table-search">
            <button class="btn-filter">Sort by Date</button>
        </div>

        <table id="userTable">
            <thead>
                <tr>
                    <th></th>
                    <th>Patrimônio</th>
                    <th>Modelo</th>
                    <th>Descrição</th>
                    <th>Marca</th>
                    <th>SN</th>
                    <th>PN</th>
                    <th>Condição</th>
                    <th>Status</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>

                @foreach(var e in Model) 
                {
                    var condicao = e.Equipamento.Condicao ? "Ativo" : "Inativo";

                    //Utiliza o status do equipamento para aplicar o estilo correspondente
                    var statusStyle = Regex.Replace(@e.Status.Normalize(System.Text.NormalizationForm.FormD), @"\p{IsCombiningDiacriticalMarks}+", "").ToLower();

                    <tr>
                        <td></td>
                        <td>@e.Equipamento.Codigo</td>
                        <td>@e.Equipamento.Modelo</td>
                        <td>@e.Equipamento.Descricao</td>
                        <td>@e.Equipamento.Marca</td>
                        <td>@e.Equipamento.SerialNumber</td>
                        <td>@e.Equipamento.PartNumber</td>
                        <td>@condicao</td>
                        <td><span class="status @statusStyle @condicao.ToLower()">@e.Status</span></td>
                        <td>
                            <button type="button" class="btn btn-primary edit-btn" data-id="@e.Equipamento.Id">E</button>
                            <button type="button" class="btn btn-danger delete-btn" data-id="@e.Equipamento.Id">D</button>
                        </td>
                    </tr>
                }

            </tbody>
        </table>

        <!-- Modal para edição -->
        <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Editar Equipamento</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <form asp-action="Update" method="post">
                        <div class="modal-body">
                            <input type="hidden" id="id"/>

                            <div class="form-group">
                                <label for="codigo">Código:</label>
                                <input type="text" class="form-control" id="codigo"/>
                            </div>

                            <div class="form-group">
                                <label for="modelo">Modelo:</label>
                                <input type="text" class="form-control" id="modelo" />
                            </div>

                            <div class="form-group">
                                <label for="descr">Descrição:</label>
                                <input type="text" class="form-control" id="descr" />
                            </div>

                            <div class="form-group">
                                <label for="marca">Marca:</label>
                                <input type="text" class="form-control" id="marca" />
                            </div>

                            <div class="form-group">
                                <label for="sn">Serial Number:</label>
                                <input type="text" class="form-control" id="sn" />
                            </div>

                            <div class="form-group">
                                <label for="pn">Part Number:</label>
                                <input type="text" class="form-control" id="pn" />
                            </div>

                            <input type="hidden" id="condicao"/>


                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                            <button type="submit" class="btn btn-primary">Salvar</button>
                        </div>
                    </form>

                </div>
            </div>
        </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/2.1.5/js/dataTables.js"></script>
<script src="https://cdn.datatables.net/select/2.0.5/js/dataTables.select.js"></script>
<script src="https://cdn.datatables.net/select/2.0.5/js/select.dataTables.js"></script>
<script src="~/js/datatables.js"></script>

<script>
    window.addEventListener('load', () => {
        let table = new DataTable('#userTable', {
            language: {
                url: '//cdn.datatables.net/plug-ins/2.1.7/i18n/pt-BR.json',
            },

            lengthMenu: [10, 25, 50, { label: 'Todos', value: -1 }],

            search: {
                return: false
            },

            columns: [
                { data: null, orderable: false, searchable: false, render: DataTable.render.select() },
                {}, {}, {}, {}, {}, {}, {}, {}, {},
            ],

            columnDefs: [{
                targets: [9],
                orderable: false
            }],

            select: {
                style: 'multi',
                selector: 'td:first-child'
            },

            layout: {
                topStart: {
                    'pageLength': true,
                    buttons: ['csv', 'pdf', 'print']
                }
            }
        });

        let buttons = document.getElementsByClassName('dt-buttons')[0]

        let buttonsPDF = document.getElementsByClassName('buttons-pdf')[0]
        let buttonsCSV = document.getElementsByClassName('buttons-csv')[0]
        let buttonsPrinter = document.getElementsByClassName('buttons-print')[0]
        let tableSearch = document.getElementById('dt-search-0')

        let btnPdf = document.getElementById('pdf')
        let btnXls = document.getElementById('xls')
        let btnpPinter = document.getElementById('printer')
        let search = document.getElementById('table-search')

        btnPdf.addEventListener('click', () => {
            buttonsPDF.click()
        })

        btnXls.addEventListener('click', () => {
            buttonsCSV.click()
        })

        btnpPinter.addEventListener('click', () => {
            buttonsPrinter.click()
        })

        // Fechar o model
        $('.close').on('click', function () {
            $('#editModal').modal('hide');
        });

        // Cancelar a abertura do model
        $('.btn-secondary').on('click', function () {
            $('#editModal').modal('hide');
        });

        // Carregar dados no modal para edição
        $('.edit-btn').on('click', function () {
            $('#editModal').modal('show');

            const id = $(this).data('id');

            $.get(`/Estoque/GetById/${id}`, function (data) {
                console.log(data)
                $('#id').val(data.id);
                $('#codigo').val(data.codigo);
                $('#modelo').val(data.modelo);
                $('#descr').val(data.descricao);
                $('#marca').val(data.marca);
                $('#sn').val(data.serialNumber);
                $('#pn').val(data.partNumber);
                $('#condicao').val(data.partNumber);
            });
            
        });

        // // Enviar dados editados para o servidor
        // $('#editForm').on('submit', function (e) {
        //     e.preventDefault();

        //     const id = $(this).data('id');
        //     const formData = $(this).serialize();

        //     $.ajax({
        //         url: `/Estoque/Update`,
        //         type: 'POST',
        //         data: formData,
        //         success: function () {
        //             $('#editModal').modal('hide');
        //             location.reload(); // Recarregar a página para ver as atualizações
        //         },
        //         error: function (xhr) {
        //             console.error('Erro ao atualizar:', xhr.responseText);
        //             alert('Erro ao atualizar o patrimônio.');
        //         }
        //     });
        // });
    })
</script>

