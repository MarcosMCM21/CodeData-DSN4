@using Microsoft.AspNetCore.Identity
@using CodeData_Connection.Areas.Identity.User
@using CodeData_Connection.Models.Database
@using CodeData_Connection.Models.Database.Entidade
@using CodeData_Connection.Areas.Identity.Data

@inject UserManager<ApplicationUser> UserManager
@inject ApplicationDbContext _context

<head>
    <link href="~/css/navbar.css" id="app-style" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
</head>

<div class="navbar-header">
    <div class="d-flex">

        <button type="button" class="btn btn-sm px-3 font-size-16 header-item waves-effect" id="vertical-menu-btn">
            <i class="fa fa-fw fa-bars"></i>
        </button>
            
    </div>

    <div class="d-flex">
        <h2>@ViewData["Title"].ToString().ToUpper()</h2>
    </div>

    <div class="d-flex">

        <div class="dropdown d-none d-lg-inline-block ms-1">
            <button type="button" class="btn header-item noti-icon waves-effect" onclick="openFullscreen()">
                <i class="bx bx-fullscreen"></i>
            </button>
        </div>

        @{
            var notificacoes = _context.Notificacoes.Where(n => n.UserId == UserManager.GetUserAsync(User).Result.Id).ToList();
        }

        <div class="dropdown d-inline-block">
            <button type="button" class="btn header-item noti-icon" id="page-header-notifications-dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">

                @if(notificacoes.Count >= 1)
                {
                    <i class="bx bx-bell bx-tada"></i>
                    <span class="badge bg-danger rounded-pill">@notificacoes.Count</span>
                } else
                {
                     <i class="bx bx-bell"></i>
                }

            </button>
            <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end p-0" aria-labelledby="page-header-notifications-dropdown" style="">
                <div class="p-3">
                    <div class="row align-items-center">
                        <div class="col">
                            <h6 class="m-0" key="t-notifications">Notificações</h6>
                        </div>
                        <div class="col-auto">
                            <a href="#!" class="small" key="t-view-all">Ver Todas</a>
                        </div>
                    </div>
                </div>

                <div data-simplebar="init" style="max-height: 230px;">
                    <div class="simplebar-wrapper" style="margin: 0px;">
                        <div class="simplebar-height-auto-observer-wrapper">
                            <div class="simplebar-height-auto-observer"></div>
                        </div>

                            <div class="simplebar-mask">
                                <div class="simplebar-offset" style="right: 0px; bottom: 0px;">
                                    <div class="simplebar-content-wrapper" style="height: auto; overflow: hidden;">
                                        <div class="simplebar-content" style="padding: 0px;">
                                        
                                        @foreach (Notificacao notificacao in notificacoes)
                                        {
                                            <a href="javascript: void(0);" class="text-reset notification-item">
                                                <div class="d-flex">
                                                    <div class="flex-grow-1">
                                                        <h6 class="mb-1" key="t-your-order">@notificacao.Titulo</h6>
                                                        <div class="font-size-12 text-muted">
                                                            <p class="mb-1" key="t-grammer">@notificacao.Mensagem</p>
                                                            <p class="mb-0"><i class="mdi mdi-clock-outline"></i> <span key="t-min-ago">@notificacao.DataHora</span></p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </a>
                                        }
                </div>
            </div>
        </div>
    </div>
        
    <div class="simplebar-placeholder" style="width: 0px; height: 0px;"></div>

</div>
    
<div class="simplebar-track simplebar-horizontal" style="visibility: hidden;"><div class="simplebar-scrollbar" style="transform: translate3d(0px, 0px, 0px); display: none;"></div></div>
    
<div class="simplebar-track simplebar-vertical" style="visibility: hidden;"><div class="simplebar-scrollbar" style="transform: translate3d(0px, 0px, 0px); display: none; height: 136px;"></div></div></div>
                <div class="p-2 border-top d-grid">
                    <a class="btn btn-sm btn-link font-size-14 text-center" href="javascript:void(0)">
                        <i class="mdi mdi-arrow-right-circle me-1"></i> <span key="t-view-more">Mostrar Mais</span> 
                    </a>
                </div>
            </div>
        </div>

        <div class="dropdown d-inline-block">
            <button type="button" class="btn header-item waves-effect" id="page-header-user-dropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @* <img class="rounded-circle header-profile-user" src="~/img/users/avatar-2.png" alt="Header Avatar"> *@
                <span class="d-xl-inline-block ms-1" key="t-henry">@UserManager.GetUserAsync(User).Result.FirstName @UserManager.GetUserAsync(User).Result.LastName</span>
                <i class="mdi mdi-chevron-down d-none d-xl-inline-block"></i>
            </button>
            <div class="dropdown-menu dropdown-menu-end">
                <!-- item-->
                <a class="dropdown-item" href="#"><i class="bx bx-user font-size-16 align-middle me-1"></i> <span key="t-profile">Perfil</span></a>
                <a class="dropdown-item d-block" href="#"><i class="bx bx-wrench font-size-16 align-middle me-1"></i> <span key="t-settings">Configurações</span></a>
                <a class="dropdown-item" href="#"><i class="bx bx-lock-open font-size-16 align-middle me-1"></i> <span key="t-lock-screen">Lock screen</span></a>
                <div class="dropdown-item checkbox-wrapper-14">
                    <i class="bx bx-moon font-size-16 align-middle me-1"></i> <span key="dark-mode">Tema Escuro</span>
                    @* <label class="switch switch-sm">
                        <input data-theme-state="dark" data-theme-toggle="true" name="check" type="checkbox" value="1">
                    </label> *@
                    <input id="dark-theme" type="checkbox" class="switch">
                    <label for="dark-theme"></label>
                </div>
                <div class="dropdown-divider"></div>
                <form id="form-logout" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post" style="display=none"></form>
                <a class="dropdown-item text-danger" href="#" onclick="document.getElementById('form-logout').submit()"><i class="bx bx-power-off font-size-16 align-middle me-1 text-danger"></i> <span key="t-logout">Sair</span></a>
            </div>
        </div>
    </div>

    <script>
        let darkTheme = document.getElementById('dark-theme')

         darkTheme.checked = sessionStorage.getItem("isDarkTheme")?true:false

        darkTheme.addEventListener('click', () => {
            let body = document.querySelector("body");
            let isDark = darkTheme.checked
            
            if (isDark == false) {
                body.classList.remove('theme-dark')
                body.classList.add('theme-light')

                sessionStorage.setItem("isDarkTheme", false);

            } else {
                body.classList.remove('theme-light')
                body.classList.add('theme-dark')

                sessionStorage.setItem("isDarkTheme", true);
            }

        })

        function openFullscreen() {

            if (document.fullscreenElement == null) {
                document.documentElement.requestFullscreen()
            } else {
                document.exitFullscreen();
            }
        }
    </script>
</div>